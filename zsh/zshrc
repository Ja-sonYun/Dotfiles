# Q pre block. Keep at the top of this file.
set -o ignoreeof

# redirect to wsl home if in wsl
if [[ $(pwd) == */mnt/c* ]]; then
    cd "$HOME" || exit
fi

export CONFIG=~/config

# Load dotenv
DOTENV=$CONFIG/zsh/.env
if [ -f $DOTENV ]; then
    export $(cat $DOTENV | sed 's/#.*//g' | xargs)
else
    echo "No .env file found"
fi

export XDG_CONFIG_HOME=~/.config

source $CONFIG/zsh/module/environment.sh
# #####################################################
source $CONFIG/zsh/module/plugin.sh
source $CONFIG/zsh/module/theme.sh
source $CONFIG/zsh/module/cfunction.sh
source $CONFIG/zsh/module/functions.sh

# for Mac
if [[ $(uname) == "Darwin" ]]; then
    source $CONFIG/zsh/module/homebrew.sh
elif [[ $(uname) == "Linux" ]]; then
    export DISPLAY=:0
    export HOST_IP="$(ip route |awk '/^default/{print $3}')"
    export PULSE_SERVER="tcp:$HOST_IP"
fi

source $CONFIG/zsh/module/alias.sh

# command line
export _PS1_HEAD=""
export _PS1_TAIL=""
autoload -U colors && colors

function envinfo() {
    if [ -f .terraform/environment ]; then
        echo "%{$fg[yellow]%}(%Utf:$(cat .terraform/environment)%u)%{$reset_color%}"
    elif [[ -n "$VIRTUAL_ENV" && -n "$DIRENV_DIR" ]]; then
        echo "%{$fg[yellow]%}(%Upy:$(basename "$VIRTUAL_ENV")%u)%{$reset_color%}"
    fi
}

function gitstatus_prompt() {
    if [ -n "$GITSTATUS_PROMPT" ]; then
        echo " [$GITSTATUS_PROMPT]"
    fi
}

source $(brew --prefix)/opt/gitstatus/gitstatus.prompt.zsh

PS1='${_PS1_HEAD}[%D{%d/%m,%H:%M:%S}]%{$fg[red]%}%(1j.%Uâ€¢%j%u|.)%{$reset_color%}$(envinfo)$(shorten-pwd)$(gitstatus_prompt)${_PS1_TAIL} %{$fg[green]%}$%{$reset_color%} '

if [ "$RICHTERM" ]; then
    if [ ! "$TMUX" ]; then
        tm
    fi
fi

export _MAIN_WINDOW="default"

if [ "$TMUX" ]; then
    TMUX_BOOTED=$(tmux showenv TMUX_BOOTED 2> /dev/null || echo 0)
    local current_window_name=$(tmux display-message -p '#S')

    if [ "$TMUX_BOOTED" = "0" ] && [ "$current_window_name" = "$_MAIN_WINDOW" ]; then
        tmux setenv TMUX_BOOTED 1 > /dev/null
        # run script that run on login
        /bin/zsh $CONFIG/zsh/bootup_script.sh
    else;
        /bin/zsh $CONFIG/zsh/session_script.sh
    fi

    # quit tmux if this is the last active session on window
    function quit_tmux() {
        local current_window_name=$(tmux display-message -p '#S')
        local current_window_panes=$(tmux display-message -p '#{window_panes}')
        if [ "$current_window_name" = "$_MAIN_WINDOW" ] && [ "$current_window_panes" = "1" ]; then
            # will return number of session in default window
            local session_num=$(tmux ls | awk '$1 ~ "default" { print $2 }')
            if [ "$session_num" = "1" ]; then
                # Confirm to kill tmux server
                read -q "REPLY?Do you want to kill tmux server? [y/N] "
                echo ""
                if [[ $REPLY =~ ^[Yy]$ ]]; then
                    tmux kill-server
                    echo "tmux server killed"
                fi
            fi
        fi
    }

    trap "quit_tmux" EXIT
fi

# Override keybinds
source $CONFIG/zsh/zle/better_grammar.sh

source $CONFIG/zsh/module/keybind.sh
source $CONFIG/zsh/module/compinit.sh
source $CONFIG/zsh/module/fzf.sh
source $CONFIG/zsh/module/etc.sh

# Boot up script after all initialized
source $CONFIG/zsh/module/bootup.sh

# Activate Hooks
source $CONFIG/zsh/hooks/activate.sh


export _EMPTY=

# Added by LM Studio CLI (lms)
export PATH="$PATH:/Users/jasony/.cache/lm-studio/bin"
