#!/usr/bin/env bash

set -x

# ====== Variables =============================

declare -A gaps
declare -A color

# gaps["top"]="38"
gaps["top"]="2"
gaps["bottom"]="8"
gaps["left"]="4"
gaps["right"]="4"
gaps["inner"]="4"

color["focused"]="0xfff00031"
color["normal"]="0x00010101"
color["preselect"]="0xE02d74da"
color["transparent"]="0x00FFFFFF"

# Uncomment to refresh ubersicht widget on workspace change
# Make sure to replace WIDGET NAME for the name of the ubersicht widget
#ubersicht_spaces_refresh_command="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"WIDGET NAME\"'"

# ===== Loading Scripting Additions ============

# See: https://github.com/koekeishiya/yabai/wiki/Installing-yabai-(latest-release)#macos-big-sur---automatically-load-scripting-addition-on-startup
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
sudo yabai --load-sa

# ===== Tiling setting =========================

yabai -m config layout                      bsp

yabai -m config top_padding                 "${gaps["top"]}"
yabai -m config bottom_padding              "${gaps["bottom"]}"
yabai -m config left_padding                "${gaps["left"]}"
yabai -m config right_padding               "${gaps["right"]}"
yabai -m config window_gap                  "${gaps["inner"]}"

yabai -m config mouse_follows_focus         off
yabai -m config focus_follows_mouse         off

yabai -m config window_topmost              off
yabai -m config window_opacity              off
yabai -m config window_shadow               float

yabai -m config window_border               on
yabai -m config window_border_width         2
yabai -m config active_window_border_color  "${color["focused"]}"
yabai -m config normal_window_border_color  "${color["transparent"]}"
yabai -m config insert_feedback_color       "${color["preselect"]}"

yabai -m config active_window_opacity       0.0
yabai -m config normal_window_opacity       0.0
yabai -m config window_opacity               off
yabai -m config window_border_blur           off
yabai -m config split_ratio                 0.50

yabai -m config auto_balance                off

yabai -m config mouse_modifier              fn
yabai -m config mouse_action1               move
yabai -m config mouse_action2               resize

# yabai -m config external_bar                main:0:0
# ===== Rules ==================================

yabai -m rule --add label="Finder" app="^Finder$" title="(Co(py|nnect)|Move|Info|Pref)" manage=off
yabai -m rule --add label="Safari" app="^Safari$" title="^(General|(Tab|Password|Website|Extension)s|AutoFill|Se(arch|curity)|Privacy|Advance)$" manage=off
yabai -m rule --add label="macfeh" app="^macfeh$" manage=off
yabai -m rule --add label="System Preferences" app="^System Preferences$" title=".*" manage=off
yabai -m rule --add label="App Store" app="^App Store$" manage=off
yabai -m rule --add label="Activity Monitor" app="^Activity Monitor$" manage=off
yabai -m rule --add label="KeePassXC" app="^KeePassXC$" manage=off
yabai -m rule --add label="Calculator" app="^Calculator$" manage=off
yabai -m rule --add label="Dictionary" app="^Dictionary$" manage=off
yabai -m rule --add label="mpv" app="^mpv$" manage=off
yabai -m rule --add label="Software Update" title="Software Update" manage=off
yabai -m rule --add label="ChatGPT" title="^ChatGPT$" manage=off
yabai -m rule --add label="About This Mac" app="System Information" title="About This Mac" manage=off
yabai -m rule --add app="Preview" manage=off
yabai -m rule --add app="Python" manage=off
# yabai -m rule --add app="Reminders" manage=off
# yabai -m rule --add app="Calendar" manage=off
yabai -m rule --add app="System Settings" manage=off

# ===== Signals ================================

# yabai -m signal --add event=application_front_switched action="${ubersicht_spaces_refresh_command}"
# yabai -m signal --add event=display_changed action="${ubersicht_spaces_refresh_command}"
# yabai -m signal --add event=space_changed action="${ubersicht_spaces_refresh_command}"
# yabai -m signal --add event=window_created action="${ubersicht_spaces_refresh_command}"
# yabai -m signal --add event=window_destroyed action="${ubersicht_spaces_refresh_command}"
# yabai -m signal --add event=window_focused action="${ubersicht_spaces_refresh_command}"
# yabai -m signal --add event=window_title_changed action="${ubersicht_spaces_refresh_command}"

yabai -m signal --add event=window_focused action="sketchybar --trigger window_focus"
yabai -m signal --add event=window_created action="sketchybar --trigger windows_on_spaces"
yabai -m signal --add event=window_destroyed action="sketchybar --trigger windows_on_spaces"

NOTCH_UUID="37D8832A-2D66-02CA-B9F7-8F30A301B230"
NORMAL_BAR=20
NOTCH_BAR=0

yabai -m signal --add event=display_added action="if [[ \"\$(yabai -m query --displays | jq \".[] | select(.id == \$YABAI_DISPLAY_ID) | .uuid\")\" =~ \"$NOTCH_UUID\" ]]; then yabai -m config external_bar \"main:$NOTCH_BAR:0\"; fi"
yabai -m signal --add event=display_removed action="if [[ ! \"\$(yabai -m query --displays | jq '.[].uuid')\" =~ \"$NOTCH_UUID\" ]]; then yabai -m config external_bar main:$NORMAL_BAR:0; else yabai -m config external_bar main:$NOTCH_BAR:0; fi"

# global settings
if [[ "$(yabai -m query --displays | jq '.[].uuid')" =~ "$NOTCH_UUID" ]]; then if [ "$(yabai -m query --displays | jq length)" -gt "1" ]; then yabai -m config external_bar main:$NOTCH_BAR:0; else yabai -m config external_bar main:$NOTCH_BAR:0; fi else yabai -m config external_bar main:$NORMAL_BAR:0; fi

set +x
